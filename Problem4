#4 Compute the determinant of a 4x4 matrix of double precision floating point numbers.

import numpy
def mat1(a,b,c,d):
    mat = [
           [a*random(),b*random(),c*random(),d*random()],
           [a*random(),b*random(),c*random(),d*random()],
           [a*random(),b*random(),c*random(),d*random()],
           [a*random(),b*random(),c*random(),d*random()]
    ]
    return numpy.linalg.det(mat)
timeit("mat1(1,2,3,4)") -- 625 loops, best of 3: 270 µs per loop

%cython
import numpy
cimport numpy
cdef mat1(a,b,c,d):
    mat = numpy.matrix([[a,b,c,d],[d,c,b,a], [c,d,a,b], [b,a,d,c]]) * float(a/b)
    return numpy.linalg.det(mat)
timeit("mat1(2,2,5,4)") -- 625 loops, best of 3: 164 µs per loop
