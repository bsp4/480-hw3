#5 Multiply a 4x4 matrix of double precision floating point numbers times another 4x4 matrix.

import numpy
def mat_mulp(a,b,c,d):
    mtrx = numpy.matrix([[a,b,c,d],[d,c,b,a], [c,d,a,b], [b,a,d,c]]) * random()
    return mtrx * mtrx
timeit("mat_mulp(2,2,5,4)") -- 625 loops, best of 3: 86 µs per loop

%cython
import numpy
cimport numpy
cdef mat_mulc(int a,int b,int c,int d):
    mtrx = numpy.matrix([[a,b,c,d],[d,c,b,a], [c,d,a,b], [b,a,d,c]]) * float(a/b)
    return mtrx * mtrx
timeit("mat_mulc(2,2,5,4)") -- 625 loops, best of 3: 87.4 µs per loop


